buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		//mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'life'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	//mavenCentral()
	jcenter()
}


dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	//compile('org.springframework.boot:spring-boot-starter-aop')
	//compile('org.springframework.boot:spring-boot-starter-cache')
	//compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	//compile('org.springframework.boot:spring-boot-starter-redis')
	//compile('org.springframework.boot:spring-boot-devtools')
	//compile('org.springframework.boot:spring-boot-starter-mobile')
	//compile('org.springframework.boot:spring-boot-starter-security')
	//compile('org.springframework.session:spring-session')
	compile('io.springfox:springfox-swagger2:2.5.0')
	compile('io.springfox:springfox-swagger-ui:2.2.2')
	compile ('com.alibaba:fastjson:1.2.11')
	compile ('org.apache.httpcomponents:httpclient:4.3.6')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
	}
}
